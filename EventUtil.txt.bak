/*
	以下是红宝书中有关创建一个跨浏览器的事件对象的函数
*/

//--------------------------------------------------------------
var EventUtil = {
	//添加事件处理程序
	addHandler: function(element, type, handler) {
		//element:需要操作的元素
		//type: 事件类型
		//handler: 事件处理函数
		if(element.addEventListener) {
			element.addEventListener(type, handler, false);//DOM2级
		} else if(element.attachEvent) {
			element.attachEvent("on" + type, handler);//IE事件
		} else {
			element["on" + type] = handler;//DOM0级
		}
	},

	//删除事件处理程序
	removeHandler: function(element, type, handler) {
		if (element.removeEventListener) {
			element.removeEventListener(type, handler, false);//DOM2级
		} else if(element.detachEvent) {
			element.detachEvent("on" + type, handler);//IE事件
		} else {
			element["on" + type] = null;//DOM0级
		}
	}

	//返回对event对象的引用
	getEvent: function(event) {
		return event ? event : window.event;	
	},

	//返回事件的目标
	getTarget: function(event) {
		return event.target || event.srcElement;	
	},

	//取消事件的默认行为
	preventDefault: function(event) {
		if(event.preventDefault) {
			event.preventDefault();
		} else {
			event.returnValue = false;
		}
	},

	//取消事件的冒泡行为
	stopPropagation: function(event) {
		if(even.stopPropagation) {
			event.stopPropagation();
		} else {
			event.cancelBubble = true;
		}
	},

	//取得事件的相关元素
	getRelatedTarget: function(event) {
		if(event.relatedTarget) {
			return event.relatedTarget;
		} else if(event.toElement) {
			return event.toElement;
		} else if(event.fromElement) {
			return event.fromElement;
		} else {
			return null;
		}
	},

	//获取鼠标按钮
	getButton: function(event) {
		if(document.implements.hasFeature("MouseEvents", "2.0")) {
			return event.button;
		} else {
			switch(event.button) {
				case 0:
				case 1:
				case 3:
				case 5:
				case 7:
				     return 0;
				case 2:
				case 6:
				     return 2;
				case 4:
				     return 1;
			}
		}
	},

	//取得滚轮增量值
	getWheelDelta: function(event) {
		if(event.wheelDelta) {
			//早期（9.5之前的Opera版本的wheelDelta的值正负号颠倒）
			return (client.engine.opera && client.engine.opera <9.5 ? -event.wheelDelta : event.wheelDelta);
		} else {
			//FireFox
			return -event.detail * 40;
		}
	},
}